generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String  @id @default(cuid())
  name  String?
  email String? @unique
  emailVerified DateTime?
  image String?
  createAt DateTime @default(now())
  updateAt  DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]
  posts         Post[]
  comments      Comment[]
  Vote          Vote[]
}

model VerificationToken {
  identifier  String
  token  String  @unique
  expires DateTime

  @@unique([identifier, token])
}

model Account {
  id  String  @id  @default(cuid())
  userId  String
  type  String
  provider  String
  providerAccountId  String
  refresh_token  String?  @db.Text
  accesss_token  String?  @db.Text
  expires_at  Int?
  token_type  String?
  scope  String?
  id_token  String?  @db.Text
  session_date  String?
  oauth_token_secret  String?
  oauth_token  String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id  String  @id  @default(cuid())
  sessionToken String  @unique
  userId String
  expires  DateTime
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Subreddit {
  name  String  @id
  description  String
  posts  Post[]
}

model Post {
  id  Int  @id  @default(autoincrement())
  title  String
  content  String
  image String?
  createAt  DateTime  @default(now())
  author  User  @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  subreddit  Subreddit?  @relation(fields: [subredditName], references: [name])
  subredditName  String?
  Vote  Vote[]
}

model Comment {
  id  Int  @id  @default(autoincrement())
  content  String
  createAt  DateTime  @default(now())
  author  User  @relation(fields: [authorId], references: [id])
  authorId  String
  post  Post?  @relation(fields: [postId], references: [id])
  postId  Int?
}

model Vote {
  id  Int  @id  @default(autoincrement())
  up  Boolean
  author  User  @relation(fields: [authorId], references: [id])
  authorId  String
  post  Post?  @relation(fields: [postId], references: [id])
  postId  Int?

  @@unique([authorId, postId])
}